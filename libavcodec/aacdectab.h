/*
 * AAC decoder data
 * Copyright (c) 2005-2006 Oded Shimon ( ods15 ods15 dyndns org )
 * Copyright (c) 2006-2007 Maxim Gavrilov ( maxim.gavrilov gmail com )
 *
 * This file is part of FFmpeg.
 *
 * FFmpeg is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * FFmpeg is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with FFmpeg; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 */

/**
 * @file
 * AAC decoder data
 * @author Oded Shimon  ( ods15 ods15 dyndns org )
 * @author Maxim Gavrilov ( maxim.gavrilov gmail com )
 */

#ifndef AVCODEC_AACDECTAB_H
#define AVCODEC_AACDECTAB_H

#include "libavutil/channel_layout.h"
#include "aac.h"

#include <stdint.h>

#define AAC_MAX_CHANNELS 24
#define AAC_MAX_DEFAULT_LAYOUTS 16
#define MAX_TAG 16

static const int8_t tags_per_config[AAC_MAX_DEFAULT_LAYOUTS] = { 0, 1, 1, 2, 3, 3, 4, 5, 0, 0, 0, 5, 5, 16, 5, 0 };

/* 7.1(top) elements ordering is odd in spec: LFE is not last, there is a TOP Front element after ; in regular PCE this would not be allowed */
static const uint8_t aac_channel_layout_map[AAC_MAX_DEFAULT_LAYOUTS][MAX_TAG][4] = {
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT }, },
    { { TYPE_CPE, 0, AAC_CHANNEL_FRONT }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT }, { TYPE_SCE, 1, AAC_CHANNEL_BACK }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 1, AAC_CHANNEL_BACK }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 1, AAC_CHANNEL_BACK }, { TYPE_LFE, 0, AAC_CHANNEL_LFE }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 1, AAC_CHANNEL_FRONT }, { TYPE_CPE, 2, AAC_CHANNEL_SIDE }, { TYPE_LFE, 0, AAC_CHANNEL_LFE }, },
    { { 0, } },
    { { 0, } },
    { { 0, } },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 1, AAC_CHANNEL_SIDE }, { TYPE_SCE, 1, AAC_CHANNEL_BACK }, { TYPE_LFE, 0, AAC_CHANNEL_LFE }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 1, AAC_CHANNEL_SIDE }, { TYPE_CPE, 2, AAC_CHANNEL_BACK }, { TYPE_LFE, 0, AAC_CHANNEL_LFE }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 1, AAC_CHANNEL_FRONT }, { TYPE_CPE, 2, AAC_CHANNEL_SIDE }, { TYPE_CPE, 3, AAC_CHANNEL_BACK },
      { TYPE_SCE, 1, AAC_CHANNEL_BACK }, { TYPE_LFE, 0, AAC_CHANNEL_LFE }, { TYPE_LFE, 1, AAC_CHANNEL_LFE }, { TYPE_SCE, 2, AAC_CHANNEL_FRONT }, { TYPE_CPE, 4, AAC_CHANNEL_FRONT },
      { TYPE_CPE, 5, AAC_CHANNEL_SIDE }, { TYPE_SCE, 3, AAC_CHANNEL_SIDE }, { TYPE_CPE, 6, AAC_CHANNEL_BACK }, { TYPE_SCE, 4, AAC_CHANNEL_BACK }, { TYPE_SCE, 5, AAC_CHANNEL_FRONT },
      { TYPE_CPE, 7, AAC_CHANNEL_FRONT },},//AV_CH_LAYOUT_22POINT2
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT }, { TYPE_CPE, 1, AAC_CHANNEL_SIDE }, { TYPE_LFE, 0, AAC_CHANNEL_LFE }, { TYPE_CPE, 2, AAC_CHANNEL_FRONT }, },// follow spec event though it's odd
    { { 0, } },
};

static const uint8_t aac_channel_layout_map_reordered[AAC_MAX_DEFAULT_LAYOUTS][MAX_TAG][4] = {
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, },
    { { TYPE_CPE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_SCE, 1, AAC_CHANNEL_BACK, NORMAL_HEIGHT }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_CPE, 1, AAC_CHANNEL_BACK, NORMAL_HEIGHT }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_CPE, 1, AAC_CHANNEL_BACK, NORMAL_HEIGHT }, { TYPE_LFE, 0, AAC_CHANNEL_LFE, NORMAL_HEIGHT  }, },
    { { TYPE_CPE, 1, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_SCE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_LFE, 1, AAC_CHANNEL_LFE, NORMAL_HEIGHT }, { TYPE_CPE, 2, AAC_CHANNEL_SIDE, NORMAL_HEIGHT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT  }, },
    { { 0, } },
    { { 0, } },
    { { 0, } },
    { { TYPE_CPE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_SCE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_LFE, 0, AAC_CHANNEL_LFE, NORMAL_HEIGHT  }, { TYPE_CPE, 1, AAC_CHANNEL_SIDE, NORMAL_HEIGHT }, { TYPE_SCE, 1, AAC_CHANNEL_BACK, NORMAL_HEIGHT }, },
    { { TYPE_SCE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_CPE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_CPE, 1, AAC_CHANNEL_SIDE, NORMAL_HEIGHT }, { TYPE_CPE, 2, AAC_CHANNEL_BACK, NORMAL_HEIGHT }, { TYPE_LFE, 0, AAC_CHANNEL_LFE, NORMAL_HEIGHT  }, },
    { { TYPE_CPE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_SCE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_LFE, 0, AAC_CHANNEL_LFE, NORMAL_HEIGHT }, { TYPE_CPE, 3, AAC_CHANNEL_BACK, NORMAL_HEIGHT }, { TYPE_CPE, 1, AAC_CHANNEL_FRONT, NORMAL_HEIGHT },
      { TYPE_SCE, 1, AAC_CHANNEL_BACK, NORMAL_HEIGHT }, { TYPE_LFE, 1, AAC_CHANNEL_LFE, NORMAL_HEIGHT }, { TYPE_CPE, 2, AAC_CHANNEL_SIDE, NORMAL_HEIGHT },
      { TYPE_CPE, 4, AAC_CHANNEL_FRONT, TOP_HEIGHT }, { TYPE_SCE, 2, AAC_CHANNEL_FRONT, TOP_HEIGHT }, { TYPE_SCE, 3, AAC_CHANNEL_SIDE, TOP_HEIGHT }, { TYPE_CPE, 6, AAC_CHANNEL_BACK, TOP_HEIGHT }, { TYPE_CPE, 5, AAC_CHANNEL_SIDE, TOP_HEIGHT }, { TYPE_SCE, 4, AAC_CHANNEL_BACK, TOP_HEIGHT },
      { TYPE_SCE, 5, AAC_CHANNEL_FRONT, BOTTOM_HEIGHT },  { TYPE_CPE, 7, AAC_CHANNEL_FRONT, BOTTOM_HEIGHT },},//AV_CH_LAYOUT_22POINT2
    { { TYPE_CPE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_SCE, 0, AAC_CHANNEL_FRONT, NORMAL_HEIGHT }, { TYPE_LFE, 0, AAC_CHANNEL_LFE, NORMAL_HEIGHT }, { TYPE_CPE, 1, AAC_CHANNEL_SIDE, NORMAL_HEIGHT }, { TYPE_CPE, 2, AAC_CHANNEL_FRONT, TOP_HEIGHT }, },
    { { 0, } },
};

static const uint64_t aac_channel_layout[AAC_MAX_DEFAULT_LAYOUTS] = {
    AV_CH_LAYOUT_MONO,
    AV_CH_LAYOUT_STEREO,
    AV_CH_LAYOUT_SURROUND,
    AV_CH_LAYOUT_4POINT0,
    AV_CH_LAYOUT_5POINT0,//ISO/IEC 14496-3:2009/Amd.4:2013 , change from AV_CH_LAYOUT_5POINT0_BACK
    AV_CH_LAYOUT_5POINT1,//ISO/IEC 14496-3:2009/Amd.4:2013
    AV_CH_LAYOUT_7POINT1_WIDE,//ISO/IEC 14496-3:2009/Amd.4:2013, change from AV_CH_LAYOUT_7POINT1
    0,
    0,
    0,
    AV_CH_LAYOUT_6POINT1,//ISO/IEC 14496-3:2009/Amd.4:2013
    AV_CH_LAYOUT_7POINT1,//ISO/IEC 14496-3:2009/Amd.4:2013
    AV_CH_LAYOUT_22POINT2,//ISO/IEC 14496-3:2009/Amd.4:2013
    AV_CH_LAYOUT_7POINT1_TOP,//ISO/IEC 14496-3:2009/Amd.4:2013
    0,
};

#endif /* AVCODEC_AACDECTAB_H */
